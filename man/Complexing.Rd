% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchmake.R
\name{Complexing}
\alias{Complexing}
\title{Calculate Complex Interaction}
\usage{
Complexing(
  object,
  subunit_a = c("subunit_a_1", "subunit_a_2", "subunit_a_3"),
  subunit_b = c("subunit_b_1", "subunit_b_2", "subunit_b_3"),
  strength_comb = c("min", "average", "max"),
  pval_comb = c("max", "average", "min")
)
}
\arguments{
\item{object}{Matchmaker object.}

\item{subunit_a}{Column names or indices (of @interactions slot) containing complex subunits information for interaction partner_a. Default is subunit_a_1, subunit_a_2, subunit_a_3.}

\item{subunit_b}{Column names or indices (of @interactions slot) containing complex subunits information for interaction partner_b. Default is subunit_b_1, subunit_b_2, subunit_b_3.}

\item{strength_comb}{Method to combine complex interaction strengths from its subunits. Default is min (minimum).
\itemize{
  \item min, minimum strength of its subunits.
  \item average, average strength of its subunits.
  \item max, maximum strength of its subunits.
  }}

\item{pval_comb}{Method to combine complex interaction p values from its subunits. Default is max (maximum).
\itemize{
  \item max, maximum p value of its subunits.
  \item average, average p value of its subunits.
  \item min, minimum p value of its subunits.
  }}
}
\value{
Returns a Matchmaker object.
}
\description{
Calculate complex interactions by combining its subunits. 
Each complex is named by its subunits saperated by semicolon, such as ITGB1:ITGA2.
Therefore COL9A2_ITGB1:ITGA2 represents interactions between COL9A2 and ITGB1:ITGA2 complex.
}
\examples{
\dontrun{
# For example, if CellPhoneDB data is used via LoadCellPhoneDB function, 
# the subunits are named as subunit_a_1, subunit_a_2 ...
object <- Complexing(object, strength_comb = "min", pval_comb = "max")
}
}
